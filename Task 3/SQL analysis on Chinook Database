[![Data Analytics Intership](https://img.shields.io/badge/Data_Analytics-Intership-orange)]
[![SQL](https://img.shields.io/badge/SQL-PostgreSQL-blue)](https://www.postgresql.org/)
[![License](https://img.shields.io/badge/License-MIT-green.svg)](LICENSE)
[![Status](https://img.shields.io/badge/Status-Completed-success)]()

# üéµ Chinook SQL Analysis

The **Chinook Database** is a sample relational database designed for learning and demonstrating SQL and database management concepts.  
It models a **digital music store** ‚Äî including data on artists, albums, tracks, customers, employees, and invoices ‚Äî making it ideal for practicing analytical SQL queries and exploring relational design.

---

## üìò Overview

**Database Purpose:**  
Simulates a digital music store to explore queries related to sales, customer behavior, and revenue patterns.  

**Schema Highlights:**  
- **Tables:** Artist, Album, Track, Customer, Invoice, InvoiceLine, Employee, Genre  
- **Relationships:** Artist ‚Üí Album ‚Üí Track ‚Üí InvoiceLine ‚Üí Invoice ‚Üí Customer  
- **ERD:** Commonly visualized to understand entity connections.

---

## üóÇ Database Structure

## üß© Database Schema Overview

| Table Name            | Description |
|------------------------|-------------|
| **Artist**             | Stores artist details. |
| **Album**              | Contains albums linked to artists. |
| **Track**              | Includes track details such as genre, composer, and price. |
| **Genre**              | Defines music genres. |
| **MediaType**          | Lists file types and formats. |
| **Customer**           | Contains customer information including name, company, and location. |
| **Invoice**            | Records sales transactions and totals. |
| **InvoiceLine**        | Details individual tracks purchased per invoice. |
| **Employee**           | Contains store employees and reporting hierarchy. |
| **Playlist / PlaylistTrack** | Defines playlist structure and the tracks linked to each playlist. |



---

## ‚öôÔ∏è Setup Instructions

1. Download the Chinook database in your preferred format:  
   - `SQLite`, `MySQL`, `PostgreSQL`, `SQL Server`, or `Oracle`
2. Load it into your SQL environment (e.g., **DB Browser for SQLite**, **pgAdmin**, or **MySQL Workbench**)
3. Run queries directly to explore sales, customers, and music trends.

---

## üß† SQL Analysis

Below are key insights drawn from analytical SQL queries.  
Click each section to expand üëá

---

<details>
<summary>üéß 1. Top Selling Tracks (by Total Revenue)</summary>

```sql
SELECT 
    t.Name AS track_name,
    a.Title AS album_title,
    ar.Name AS artist_name,
    SUM(il.Quantity * il.UnitPrice) AS total_revenue
FROM invoiceline AS il
JOIN track AS t ON il.TrackId = t.TrackId
JOIN album AS a ON t.AlbumId = a.AlbumId
JOIN artist AS ar ON a.ArtistId = ar.ArtistId
GROUP BY t.TrackId, t.Name, a.Title, ar.Name
ORDER BY total_revenue DESC
LIMIT 5;
